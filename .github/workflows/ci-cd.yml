<<<<<<< HEAD
name: CI/CD - Student Project Tracker
=======
name: Deploy to AWS EC2
>>>>>>> 0b0e8c6 (Add AWS EC2 deploy workflow)

on:
  push:
    branches: [ main ]
<<<<<<< HEAD
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: us-east-1
  DOCKER_IMAGE: biwunor/student-tracker
  PORT: 8011

jobs:
  build-and-push:
    name: 🐳 Build & Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: 📅 Checkout code
        uses: actions/checkout@v3

      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: 📦 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: 🧹 Lint with flake8
        run: |
          pip install flake8
          flake8 app --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: 🥪 Run tests
        run: |
          pytest || echo "⚠️ No tests found, skipping..."

      - name: 🔐 Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 🛠️ Build Docker image
        run: docker build -t $DOCKER_IMAGE .

      - name: 📤 Push Docker image to Docker Hub
        run: docker push $DOCKER_IMAGE

  deploy:
    name: ☁️ Deploy to EC2 via SSH
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: 📅 Checkout repo
        uses: actions/checkout@v3

      - name: 🚀 SSH into EC2 and deploy Docker container
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo apt-get update && sudo apt-get upgrade -y
            cd student-progress-tracker2
            git pull origin main
            chmod +x deploy.sh
            ./deploy.sh
=======

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # 2) Load the EC2 SSH private key from GitHub Secrets
      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}

      # 3) SSH into EC2 and deploy the app
      - name: Deploy to EC2
        env:
          EC2_HOST:        ${{ secrets.EC2_HOST }}
          VAULT_ADDR:      ${{ secrets.VAULT_ADDR }}
          VAULT_ROLE_ID:   ${{ secrets.VAULT_ROLE_ID }}
          VAULT_SECRET_ID: ${{ secrets.VAULT_SECRET_ID }}
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@$EC2_HOST << 'EOF'
            set -euo pipefail

            # Ensure Docker is installed and running
            if ! command -v docker >/dev/null 2>&1; then
              echo "Docker not found – installing..."
              curl -fsSL https://get.docker.com | sh
            fi
            sudo systemctl enable --now docker

            # Remove old source and clone fresh copy
            rm -rf ~/Progress-Tracker-App || true
            git clone https://github.com/bonaventuresimeon/student-progress-tracker2.git ~/student-tracker
            cd ~/student-tracker

            # Build latest Docker image (with updated base)
            sudo docker build --pull -t student-tracker:latest .

            # Stop and remove existing container if any
            sudo docker stop student-tracker 2>/dev/null || true
            sudo docker rm student-tracker 2>/dev/null || true

            # Run new container on port 8011 with Vault env variables and volume
            sudo docker run -d --name student-tracker \
              -p 8011:8011 \
              -v \$HOME/app-data:/app/data \
              -e VAULT_ADDR=$VAULT_ADDR \
              -e VAULT_ROLE_ID=$VAULT_ROLE_ID \
              -e VAULT_SECRET_ID=$VAULT_SECRET_ID \
              student-tracker:latest

            # Optional: save container logs to file in background
            sudo docker logs -f student-tracker > \$HOME/app-data/app.log 2>&1 &
          EOF

>>>>>>> 0b0e8c6 (Add AWS EC2 deploy workflow)
